// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Fs = require("fs");
var Process = require("process");
var Belt_Array = require("bs-platform/lib/js/belt_Array.js");

var getToday = (function() {
  let date = new Date();
  return new Date(date.getTime() - (date.getTimezoneOffset() * 60000))
    .toISOString()
    .split("T")[0];
});

var pending_todos_file = "todo.txt";

var help_string = "Usage :-\n$ ./todo add \"todo item\"  # Add a new todo\n$ ./todo ls               # Show remaining todos\n$ ./todo del NUMBER       # Delete a todo\n$ ./todo done NUMBER      # Complete a todo\n$ ./todo help             # Show usage\n$ ./todo report           # Statistics";

var argv = Process.argv;

var args = argv.slice(2);

function isEmpty(x) {
  return x.length === 0;
}

function cmdHelp(param) {
  console.log(help_string);
  
}

function getIndex(x) {
  if (x !== undefined) {
    return x;
  } else {
    return 0;
  }
}

function cmdLs(param) {
  var todos = Fs.readFileSync(pending_todos_file, {
        encoding: "utf8",
        flag: "r"
      });
  if (todos.length === 0) {
    console.log("There are no pending todos!");
    return ;
  }
  var todos$1 = todos.split("\n");
  Belt_Array.reverseInPlace(todos$1);
  var length = todos$1.length;
  var string = function (todo, index) {
    return "[" + String(length - index | 0) + "] " + todo;
  };
  var todos$2 = todos$1.map(string);
  console.log(todos$2);
  
}

function option(args) {
  if (args.length === 0) {
    console.log(help_string);
    return ;
  }
  var args$1 = Belt_Array.map(args, (function (x) {
          return x.trim().toLowerCase();
        }));
  var command = args$1.shift();
  var command$1 = command !== undefined ? command : "none";
  switch (command$1) {
    case "help" :
        console.log(help_string);
        return ;
    case "ls" :
        return cmdLs(undefined);
    default:
      console.log(help_string);
      return ;
  }
}

option(args);

var encoding = "utf8";

var completed_todos_file = "done.txt";

exports.getToday = getToday;
exports.encoding = encoding;
exports.pending_todos_file = pending_todos_file;
exports.completed_todos_file = completed_todos_file;
exports.help_string = help_string;
exports.argv = argv;
exports.args = args;
exports.isEmpty = isEmpty;
exports.cmdHelp = cmdHelp;
exports.getIndex = getIndex;
exports.cmdLs = cmdLs;
exports.option = option;
/* argv Not a pure module */
